export default Filters;
declare class Filters {
    static getEventType(type: any): "input" | "change";
    static getCondition(element: any): any;
    static singleCount(element: any, index: any, id: any): {
        uniqueID: string;
        singleID: string;
        isSingleCount: any;
    };
    constructor(element: any);
    filters: any;
    filtersWrapper: any;
    openButton: any;
    openButtonIcons: any;
    selectedCount: any;
    openButtonText: any;
    buttonLabel: any;
    closeButton: any;
    acceptButton: any;
    clearButton: any;
    showMoreButtons: any[];
    accordionButtons: any;
    showAll: any;
    showAllBlocks: any[];
    filtersItems: any;
    focusableEls: any;
    checkIcon: string;
    arrowIcon: string;
    showEvent: (e: any) => void;
    hideEvent: (e: any) => void;
    showMoreEvent: (e: any) => void;
    toggleEvent: (e: any) => void;
    resetEvent: (e: any) => void;
    body: HTMLElement;
    buttons: any[];
    content: any[];
    selected: any[];
    init(): void;
    setUpDom(): void;
    controls(): void;
    showFilters(e: any): void;
    hideFilters(e: any): void;
    showMore(e: any): void;
    getTargetContent(element: any): any;
    setAccordionState(element: any, state: any): void;
    toggleAccordion(e: any): void;
    trapFocus(element: any): void;
    toggleAccept(array: any): void;
    toggleSelectedState(array: any): void;
    resultsCount(array: any, buttonText: any): void;
    updateDom(): void;
    updateCount(options: any): void;
    updateStatus(options: any): void;
    selectedItems(): void;
    clearAllFilters(e: any): void;
}
